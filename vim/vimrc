" Use Vim settings, rather then Vi settings. This setting must be as early as
" possible, as it has side effects.
set nocompatible

" Functions used for loading additional config
function LanguageConfig(filename)
  let l:filename = "lang_config/" . a:filename . ".vim"
  exec "runtime " . l:filename
endfunction

function PluginConfig(filename)
  let l:filename = "plugin_config/" . a:filename . ".vim"
  exec "runtime " . l:filename
endfunction

" Config file paths to make '.dotfiles/vim' visible to runtime
let &runtimepath .= ",$HOME/.dotfiles/vim"

augroup vimrcEx
  autocmd!

  " Load configuration common across all filetypes
  call LanguageConfig("all")

  " Plugin Configuration
  call PluginConfig("vim-plug")
  call PluginConfig("ctrlp")
  call PluginConfig("emmet-vim")
  call PluginConfig("nerdtree")
  call PluginConfig("supertab")
  call PluginConfig("syntastic")
  call PluginConfig("tagbar")
  call PluginConfig("ultisnips")
  call PluginConfig("vim-airline")
  call PluginConfig("vim-go")
  call PluginConfig("vim-mustache-handlebars")
  call PluginConfig("vim-pencil")
  call PluginConfig("vim-rails")
  call PluginConfig("vim-wiki")

  " Language Configuration
  call LanguageConfig("css")
  call LanguageConfig("go")
  call LanguageConfig("java")
  call LanguageConfig("markdown")
  call LanguageConfig("ruby")
  call LanguageConfig("wiki")
augroup END

" -- Local config --------------------------------------------------------------
"    If there are settings that are needed on this machine but that don't need
"    to be synced to the Git repository, they can be put in .vimrc.local.  Those
"    settings will be read anytime this file is read and will override any
"    settings in here.

if filereadable($HOME . "/.vimrc.local")
  source ~/.vimrc.local
endif

" Per-project local config
if filereadable(glob('./.vimrc.local'))
  source ./.vimrc.local
endif
